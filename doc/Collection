:方便的数据结构对于字符串作为键值的元素

Object
d3.keys(obj)
返回一个由属性名组成的数组
d3.values(obj)
返回一个由属性值组成的数组
d3.entries(obj)
返回一个由key：属性名，value：值组成的对象的数组

Map
和ES6的Map数据结相像，但是有一些不同：
keys强制为string
map.each()而不是map.foreach()
map.remove()而不是map.delete()
map.entries()返回一个数组而不是迭代器
map.size()是一个方法而不是一个属性，同样的，还有map.empty()

d3.map([obj[,key]])
创建一个新map，如果obj是详细提供的，则拷贝所有可枚举的属性，如果key函数提供，则用来指明每个值的key
map.has(key)
如果存在这个详细的key对应的键值对，返回true
map.get(key)
返回这个key对应的详细值，如果不存在对应的键值对，返回undefined
map.set(key, value)
设置key对应的值，如果存在，则替换旧值，支持链式调用,返回map
map.remove(key)
如果存在key对应的键值对，就删除掉，并返回true，否则返回false
map.clear()
删除map所有的键值对
map.keys()
返回每个键值对对应的键组成的数组
map.values()
返回每个键值对对应的值组成的数组
